// helpers

$toggler-size: 35px;
$toggler-color: white;
$toggler-transition: transform .5s, top .5s;

$item-count-subtract1: 4;
$item-size: $toggler-size * 2;
$item-color: white;
$item-transition: .5s;

@mixin size ($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin absolute-center {
  position: absolute;
  display: block;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  margin: auto;
}

// @mixin line {
//   @include size($toggler-size, $toggler-size / 8);
//   display: block;
//   z-index: 1;
//   border-radius: $toggler-size/16;
//   background: rgba($toggler-color, 0.7);
//   transition: $toggler-transition;
// }

.helper-menu {
  position: fixed;
  top: 50%;
  left: 50%;
  margin: -10px 0 0 -35px;
  visibility: hidden;
}

@for $i from 0 through $item-count-subtract1 {
  .helper-menu {
    li:nth-child(#{$i + 1}) a {
      transform: rotate(-180deg / $item-count-subtract1 * $i);
    }
  }
}

.helper-menu {
  li {
    @include absolute-center;
    @include size($item-size);
    display: block;
    opacity: 0;
    transition: $item-transition;
    .menu-item {
      display: block;
      width: inherit;
      height: inherit;
      // line-height: $item-size;
      color: rgba($item-color, 0.7);
      background: rgba($light-blue, 0.8);
      border-radius: 50%;
      text-align: center;
      text-decoration: none;
      font-size: 12px;
      cursor: pointer;
      transition: .2s;
      &.completed {
        &:hover {
          box-shadow: 0 0 0 $item-size/40 rgba(white, 0.3);
          color: $item-color;
          background: rgba($light-blue, 0.3);
          // font-size: $item-size/6;
        }
      }
      &.padding {
        opacity: .5;
        cursor: default;
      }
      > strong {
        display: block;
        position: relative;
        top: 50%;
        width: $item-size - 10px;
        margin: auto;
        word-wrap: break-word;
        @include transform(translateY(-50%));
      }
    }
  }
}
.show-helper {
  z-index: 10;
  .helper-menu {
    visibility: visible;
    li{
      opacity: 1;
    }
    @for $i from 0 through $item-count-subtract1 {
      li:nth-child(#{$i + 1}) {
        transform: rotate(180deg / $item-count-subtract1 * $i) translateX(-$item-size - 50px);
      }
    }
  }
}